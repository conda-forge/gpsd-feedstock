diff --git a/SConscript b/SConscript
index 3b9d9aa4c..df069219c 100644
--- a/SConscript
+++ b/SConscript
@@ -626,8 +626,11 @@ for i in ["ARFLAGS",
     if i in os.environ:
         # MergeFlags() puts the options where scons wants them, not
         # where you asked them to go.
-        env.MergeFlags(Split(os.getenv(i)))
-
+        if i == 'CPPFLAGS' or i == 'CFLAGS' or i == 'CXXFLAGS':
+            p = env.ParseFlags(os.getenv(i))
+            env.MergeFlags(p)
+        else:
+            env.MergeFlags(Split(os.getenv(i)))
 
 # Keep scan-build options in the environment
 for key, value in os.environ.items():
@@ -1137,6 +1140,7 @@ if not cleaning and not helping:
             confdefs.append("#define HAVE_LIBUSB 1\n")
             try:
                 usbflags = pkg_config('libusb-1.0')
+                usbflags.append(["-ludev"])
             except OSError:
                 announce("pkg_config is confused about the state "
                          "of libusb-1.0.")
@@ -1564,7 +1568,7 @@ python_config = {}  # Dummy for all non-Python-build cases
 
 target_python_path = ''
 py_config_text = str(eval(PYTHON_CONFIG_CALL))
-python_libdir = str(eval(PYTHON_LIBDIR_CALL))
+python_libdir = os.environ.get('SP_DIR')
 
 # flag if we have xgps* dependencies, so xgps* should run OK
 config.env['xgps_deps'] = False
@@ -2659,6 +2663,7 @@ if ((not env['debug'] and
 
 binaryinstall.append(env.Install(installdir('bindir'), bin_scripts))
 
+python_libdir = os.environ.get('SP_DIR')
 python_module_dir = str(python_libdir) + os.sep + 'gps'
 
 python_modules_install = env.Install(DESTDIR + python_module_dir,
diff --git a/clients/ppscheck.c b/clients/ppscheck.c
index 6bd6c398d..e83bcdc97 100644
--- a/clients/ppscheck.c
+++ b/clients/ppscheck.c
@@ -600,7 +600,7 @@ int main(int argc, char *argv[])
          * if (0 == ioctl(device_fd, TIOCGETD, &ldisc)) {
          * always returns ldisc == 0 */
         // set PPS line discipline
-        ldisc = N_PPS;    // 18 - the PPS line discipline
+        ldisc = 18;    // 18 - the PPS line discipline
         if (0 > ioctl(device_fd, TIOCSETD, &ldisc)) {
             (void)printf("ERROR: ioctl(%s, TIOCSETD, 18) failed: %.80s(%d)\n",
                          argv[1], strerror(errno), errno);
